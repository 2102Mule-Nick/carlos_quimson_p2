<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	
	<flow name="flights-apiFlow" doc:id="bc596429-94b2-40a8-9481-7cf332dad50d" >
		<db:select doc:name="Select" doc:id="262f9a45-2c76-42c4-a596-c17197e983e7" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * FROM american]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="88977b7f-77a4-4480-8a8b-6ac1df8e6e9f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airline: payload01.airlineName default "",
	flightCode: payload01.ID as String,
	fromAirportCode: payload01.fromAirport default "",
	toAirportCode: payload01.toAirport default "",
	departureDate: payload01.takeOffDate as String default "",
	emptySeats: payload01.seatsAvailable default 0,
	totalSeats: payload01.totalSeats default 0,
	price: payload01.price default 0,
	planeType: payload01.planeType default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="f1c98cc2-190c-483a-94e3-ebbc6a6932ba" />
	</flow>
	<flow name="get-flights" doc:id="691c82b8-4290-4278-a631-995e33a9674b" >
		<http:listener doc:name="Listener" doc:id="1e211954-bc67-4955-a477-5ad092b1260c" path="/flights" config-ref="project-2-flights-api-httpListenerConfig" />
		<db:select doc:name="Select" doc:id="0effb495-e5ea-4721-9633-0516f6074940" config-ref="Postgres_Database_Config">
			<db:sql ><![CDATA[select * from flights]]></db:sql>
		</db:select>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="cfed7610-5753-410f-b59b-63b450c0675c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	flightCode: payload01.code default "",
	fromAirportCode: payload01.origin default "",
	toAirportCode: payload01.destination default "",
	departureDate: payload01.departuredate default "",
	emptySeats: payload01.emptyseats default 0,
	totalSeats: payload01.totalseats default 0,
	price: payload01.price default 0,
	planeType: payload01.planetype default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="032fe9cb-4f0b-405f-8d6c-0aa585cf4321" />
	</flow>
	<flow name="delete-flight-by-id" doc:id="826f665c-dac0-4ae2-966f-570c9d499fae" >
		<db:delete doc:name="Delete" doc:id="b34c6755-8ae6-40d9-8d82-cba0f2eab4c5" config-ref="Postgres_Database_Config">
			<db:sql ><![CDATA[DELETE FROM flights WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	id: attributes.uriParams.flight_id
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="fc67f49e-e134-41fb-ab5c-7beb8f5cdd06" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Flight removed from database"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="e114a73c-c04c-44a9-94f7-d27d59ffd9a6" />
	</flow>
	<flow name="get-flights-by-id" doc:id="e1419f72-e8a3-4f72-a08c-587819a42349" >
		<db:select doc:name="Select" doc:id="a4a8585b-d5a3-42f5-abbf-b7bfedb7efa2" config-ref="Postgres_Database_Config">
			<db:sql ><![CDATA[SELECT * FROM flights WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	id: attributes.uriParams.flight_id
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="c186cab4-982d-4c74-9723-f541491e8397" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	flightCode: payload01.code default "",
	fromAirportCode: payload01.origin default "",
	toAirportCode: payload01.destination default "",
	departureDate: payload01.departuredate default "",
	emptySeats: payload01.emptyseats default 0,
	totalSeats: payload01.totalseats default 0,
	price: payload01.price default 0,
	planeType: payload01.planetype default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="a3b75808-ea25-4847-a979-222afc1f6dae" />
	</flow>
	<flow name="create-flights" doc:id="57120d57-9d8e-4be2-8275-834248b08288" >
		<db:insert doc:name="Insert" doc:id="4865450a-4a6c-4abd-80cb-013cc05c6f73" config-ref="Postgres_Database_Config">
			<db:sql ><![CDATA[INSERT INTO flights (code, price, departureDate, origin, destination, emptySeats, planeType, totalSeats)
	VALUES (:code, :price, :departureDate, :fromAirportCode, :toAirportCode, :emptySeats, :planeType, :totalSeats)]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	code: vars.flight.code,
	price: vars.flight.price,
	departureDate: vars.flight.departureDate,
	fromAirportCode: vars.flight.fromAirportCode,
	toAirportCode: vars.flight.toAirportCode,
	emptySeats: vars.flight.emptySeats,
	planeType: vars.flight.planeType,
	totalSeats: vars.flight.totalSeats
}]]]></db:input-parameters>
		</db:insert>
		<logger level="INFO" doc:name="Logger" doc:id="2a2c75c8-75b6-49f1-a697-5624eabcf406" />
	</flow>
	<flow name="replace-flight-by-id" doc:id="bc803e2d-dafc-4360-8095-d9014d2de111" >
		<db:update doc:name="Update" doc:id="9763f874-a2fb-463e-b508-26865c9579f0" config-ref="Postgres_Database_Config">
			<db:sql ><![CDATA[UPDATE flights
SET	price = :price, 
	departureDate = :departureDate, 
	origin = :origin, 
	destination = :destination, 
	emptySeats = :emptySeats, 
	planeType = :planeType, 
	totalSeats = :totalSeats
WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	id: vars.flight.id,
	code: vars.flight.code,
	price: vars.flight.price,
	departureDate: vars.flight.departureDate,
	origin: vars.flight.fromAirportCode,
	destination: vars.flight.toAirportCode,
	emptySeats: vars.flight.emptySeats,
	planeType: vars.flight.planeType,
	totalSeats: vars.flight.totalSeats
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="c5877590-da4d-48b3-b242-363c74090c6c" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  message: "Flight replaced in db"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="0a6db774-305f-445b-ae21-9904bdb7e7eb" />
	</flow>
	<flow name="update-flight-by-id" doc:id="8349cdaa-1771-488e-9580-2e9affa66a09" >
		<db:update doc:name="Copy_of_Update" doc:id="3817e942-ce1f-42ce-94c3-2feb6145f422" config-ref="Postgres_Database_Config" >
			<db:sql ><![CDATA[UPDATE flights
SET	price = :price, 
	emptySeats = :emptySeats 
WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	id: vars.flight.id,
	price: vars.flight.price,
	emptySeats: vars.flight.emptySeats
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Transform Message" doc:id="2b28b060-719c-4e4f-9cf4-0803a523b7d4" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  message: "Flight updated in db"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="d91b0ce9-0807-4a40-ac71-8ab8eb792b30" />
	</flow>
	<flow name="get-flights-with-destination" doc:id="c40a10f2-d16d-42fc-807b-dfcdf8822df9" >
		<db:select doc:name="Copy_of_Select" doc:id="e6675ea8-c68a-46ac-bd47-c056dfe2f00b" config-ref="Postgres_Database_Config" >
			<db:sql ><![CDATA[select * from flights WHERE destination = :destination]]></db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
---
{
	destination: vars.destination
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Copy_of_Copy_of_Transform Message" doc:id="20f00fb3-6830-4bbc-9aa9-45801d7d8810" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	flightCode: payload01.code default "",
	fromAirportCode: payload01.origin default "",
	toAirportCode: payload01.destination default "",
	departureDate: payload01.departuredate default "",
	emptySeats: payload01.emptyseats default 0,
	totalSeats: payload01.totalseats default 0,
	price: payload01.price default 0,
	planeType: payload01.planetype default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="879fd7d6-417a-4b82-8b39-cbaae2d7573d" />
	</flow>
</mule>
